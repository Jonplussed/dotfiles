#!/usr/bin/env bash


# HELPER FUNCTIONS ============================================================

_source_if_exists() {
  if [ -f $1 ]; then
    . $1
    eval $2
  fi
}



# VARIABLES ===================================================================

# normalize the PATH stack
export PATH='/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin'

# add Haskell exes to $PATH
export PATH="$HOME/.cabal/bin:$PATH" # global GHC
export PATH="$HOME/.local/bin:$PATH" # Stack

# set the default editor to Vim
export EDITOR=vim
export VISUAL=vim

# not used by any program, but nice to reference
export PG_DATA_DIR='/usr/local/var/postgres'



# ALIASES =====================================================================

# shortcuts for the most commonly used tools
alias v='vim'
alias g='git'

# override common tools with useful arguments
alias grep='grep --color'
alias ls='ls -FG'
alias la='ls -lah'

# starting/stopping services
alias bean.up='beanstalkd'
alias mysql.up='mysql.server start'
alias pg.up="pg_ctl -D $PG_DATA_DIR -l $PG_DATA_DIR/server.log start"
alias pg.down="pg_ctl -D $PG_DATA_DIR stop"
alias redis.up='redis-server /usr/local/etc/redis.conf'
alias riak.up='riak start'
alias riak.down='riak stop'

# attach to the tmux session or create a new named after the user
alias t='tmux attach-session -t "$(whoami)" || tmux new-session -s "$(whoami)"'

# update all Vim plugins
alias vundle='vim +PluginInstall! +qall'

# easily find my IP address
alias ipaddr='curl ipecho.net/plain'



# FUNCTIONS ===================================================================

# creates a directory and then immediately moves you to that directory
take() {
  mkdir -p $1;
  cd $1
}



# AUTO-COMPLETES ==============================================================

# source any homebrew-supplied autocompletion files
comps_dir='/usr/local/etc/bash_completion.d'

if [ -d $comps_dir ]; then
  for file in $(command ls $comps_dir); do
    . "$comps_dir/$file"
  done
fi

# use git autocompletion when "git" is aliased to "g"
if type __git_complete &>/dev/null; then
  __git_complete g __git_main
fi



# OTHER SOURCED FILES =========================================================

_source_if_exists "$HOME/.pair"            # "pair() shell function to set Git pairs"
_source_if_exists "$HOME/.prompt"          # Bash prompt
_source_if_exists "$HOME/.bashrc.local"    # local .bashrc overrides
