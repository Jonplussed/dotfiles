" VISUALS =====================================================================

" best color scheme ever
colorscheme solarized " best colorscheme evar
set background=dark   " start in dark mode

" highlight the line and column under the cursor
set cursorline cursorcolumn
au WinLeave * set nocursorline nocursorcolumn
au BufCreate,WinEnter * set cursorline cursorcolumn

" because we have standards
set colorcolumn=80
set textwidth=79


" SYSTEM ======================================================================

set whichwrap+=h,l              " h/l wrap like space/backspace (EXPERIMENTAL!)



" HASKELL =====================================================================

" autocomplete for neoc-ghc plugin
let g:necoghc_enable_detailed_browse = 1

" ghc-mod bindings
au FileType haskell nnoremap <buffer> <Leader>ht :GhcModType<CR>
au FileType haskell nnoremap <buffer> <Leader>hh :GhcModTypeClear<CR>
au FileType haskell nnoremap <buffer> <Leader>hc :GhcModCheck<CR>
au FileType haskell nnoremap <buffer> <Leader>hl :GhcModLint<CR>

" set test shortcut to "cabal test" in Haskell
au FileType haskell nnoremap <buffer> <Leader>t :! cabal test --show-details=always --test-options="--color"<CR>

" preset literate Haskell files using Haddock syntax
au FileType lhaskell let b:presenting_slide_separator = '\v(^|\n)\ze\= +'

" don't show /dist files in Ctrl-P
au FileType haskell set wildignore+=*/dist/*



" MARKDOWN ====================================================================

au FileType markdown setlocal spell spelllang=en_us



" PRESENTATIONS ===============================================================

function! s:PresentingEdit()
  setlocal colorcolumn=60
  setlocal textwidth=59
endfunction

function! s:PresentingStart()
  StartPresenting
  set noruler
  set noshowmode
  set noshowcmd
  set laststatus=0
  set showtabline=0
  call s:PresentingEdit()
endfunction

command! PresentingStart call s:PresentingStart()
command! PresentingEdit call s:PresentingEdit()
